#include <OneWire.h>
#include <DallasTemperature.h>

#define ONE_WIRE_BUS 5
#define TEMPERATURE_PRECISION 9
#define MAX_THERMOMETERS 15

OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature DS18B20(&oneWire);

// arrays to hold device addresses
DeviceAddress known_addresses[MAX_THERMOMETERS] = {
  { 0x28, 0xFF, 0xFE, 0x45, 0x90, 0x15, 0x04, 0x77 },
  { 0x28, 0xFF, 0x4D, 0x53, 0xA8, 0x15, 0x01, 0x83 },
  { 0x28, 0xFF, 0xD0, 0x2E, 0xA8, 0x15, 0x03, 0x51 },
  { 0x28, 0xFF, 0x6C, 0x77, 0xA8, 0x15, 0x03, 0x74 },
  { 0x28, 0xFF, 0xEA, 0x6A, 0xA8, 0x15, 0x04, 0x05 },
  { 0x28, 0xFF, 0x0A, 0x82, 0xA8, 0x15, 0x04, 0x8A },
  { 0x28, 0xFF, 0x1A, 0x82, 0xA8, 0x15, 0x04, 0xF6 },
  { 0x28, 0xFF, 0xCE, 0x5F, 0xA8, 0x15, 0x01, 0x14 },
  { 0x28, 0xFF, 0xD8, 0x13, 0xA8, 0x15, 0x04, 0x39 },
  { 0x28, 0xFF, 0xA0, 0x2C, 0xA8, 0x15, 0x03, 0x3B },
  { 0x28, 0xFF, 0x03, 0xC7, 0x03, 0x15, 0x02, 0xF2 },
  { 0x28, 0xFF, 0xBA, 0xE0, 0x03, 0x15, 0x02, 0xB8 },
  { 0x28, 0xFF, 0xB0, 0x37, 0x15, 0x15, 0x02, 0x19 },
  { 0x28, 0xFF, 0x5A, 0xC3, 0x03, 0x15, 0x02, 0x9A },
  { 0x28, 0xFF, 0x19, 0xD3, 0x03, 0x15, 0x02, 0x05 }
};

float temperature[MAX_THERMOMETERS] = {-127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127};

float getTemperature() {
  float temp;
  do {
    DS18B20.requestTemperatures(); 
    temp = DS18B20.getTempCByIndex(0);
    delay(100);
  } while (temp == 85.0 || temp == (-127.0));
  return temp;
}


void measure_setup() {
  DS18B20.begin();
  for (int i=0; i<DS18B20.getDeviceCount(); i++) {
    DeviceAddress address;
    if (!DS18B20.getAddress(address, i)) {
      Serial.println("Unable to find address for Device " + i);
    }
    DS18B20.setResolution(address, TEMPERATURE_PRECISION);
  }

}

void measure_loop() {
  DS18B20.requestTemperatures();
  for (int i=0; i<MAX_THERMOMETERS; i++) {
    DeviceAddress & addr = known_addresses[i];
    float temp = DS18B20.getTempC(addr);
    temperature[i] = temp;
  }
}

